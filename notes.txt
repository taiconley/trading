make up - Start all services
make down - Stop all services
make logs - View service logs
make health - Check service status



ssh \
    -L 5173:localhost:5173 \
    -L 8000:localhost:8000 \
    -L 8001:localhost:8001 \
    -L 5432:localhost:5432 \
    -L 5433:localhost:5433 \
    -L 6379:localhost:6379 \
    -L 5678:localhost:5678 \
    -L 5679:localhost:5679 \
    -L 5680:localhost:5680 \
    -L 9229:localhost:9229 \
    -L 8082:localhost:8082 \
    -L 54320:localhost:54320 \
    -L 3000:localhost:3000 \
    taiconley@aiunlocked.zapto.org



To get historical data:
$ docker compose exec backend-historical curl -s -X POST "http://localhost:8003/historical/request?symbol=AAPL&bar_size=1%20day&duration=1%20Y&use_rth=true" | python3 -m json.tool



To run the backtester:
docker compose exec backend-strategy python /app/src/services/backtester/main.py cli --strategy SMA_Crossover --symbols AAPL --params '{"short_period": 5, "long_period": 20}' --timeframe "1 day" --lookback 100 2>&1 | tail -40
docker compose exec backend-api python -m src.services.backtester.main cli --strategy Pairs_Trading --symbols AAPL MSFT JPM BAC GS MS XOM CVX V MA KO PEP WMT TGT PFE MRK DIS NFLX --timeframe "5 secs" --lookback 250 --initial-capital 100000 --params '{"pairs": [["AAPL", "MSFT"], ["JPM", "BAC"], ["GS", "MS"], ["XOM", "CVX"], ["V", "MA"], ["KO", "PEP"], ["WMT", "TGT"], ["PFE", "MRK"], ["DIS", "NFLX"]], "lookback_window": 240, "entry_threshold": 2.0, "exit_threshold": 0.5, "position_size": 100, "max_hold_bars": 720, "stop_loss_zscore": 3.0, "market_close_hour": 16, "market_close_minute": 0, "close_before_eod_minutes": 5, "cooldown_bars": 60, "timezone": "US/Eastern", "spread_history_bars": 1000, "hedge_refresh_bars": 30, "min_hedge_lookback": 120, "stationarity_checks_enabled": true, "adf_pvalue_threshold": 0.05, "cointegration_pvalue_threshold": 0.05, "stationarity_check_interval": 60, "volatility_adaptation_enabled": true, "volatility_window": 240, "volatility_ema_alpha": 0.2, "min_volatility_ratio": 0.75, "max_volatility_ratio": 1.5, "min_exit_volatility_ratio": 0.8, "max_exit_volatility_ratio": 1.3}'


To run the optimizer:
docker compose exec backend-api python -m src.services.optimizer.main optimize \
  --strategy Pairs_Trading \
  --symbols AAPL,MSFT,JPM,BAC,GS,MS,XOM,CVX,V,MA,KO,PEP,WMT,TGT,PFE,MRK,DIS,NFLX \
  --timeframe "5 secs" \
  --lookback 350 \
  --algorithm bayesian \
  --objective win_rate \
  --max-iterations 30 \
  --workers 24 \
  --params '{"lookback_window": [120, 180, 240, 300], "entry_threshold": [1.5, 2.0, 2.5, 3.0], "exit_threshold": [0.3, 0.5, 0.7, 1.0], "position_size": [10, 25, 50], "max_hold_bars": [360, 720, 1080], "stop_loss_zscore": [2.5, 3.0, 3.5, 4.0], "cooldown_bars": [30, 60, 90]}' \
  --config '{"pairs": [["AAPL", "MSFT"], ["JPM", "BAC"], ["GS", "MS"], ["XOM", "CVX"], ["V", "MA"], ["KO", "PEP"], ["WMT", "TGT"], ["PFE", "MRK"], ["DIS", "NFLX"]], "population_size": 20, "elite_size": 3, "mutation_rate": 0.15, "crossover_rate": 0.8, "hedge_refresh_bars": 30, "min_hedge_lookback": 120, "stationarity_checks_enabled": true, "adf_pvalue_threshold": 0.05, "cointegration_pvalue_threshold": 0.05, "stationarity_check_interval": 60, "volatility_adaptation_enabled": true, "volatility_window": 240, "volatility_ema_alpha": 0.2, "min_volatility_ratio": 0.75, "max_volatility_ratio": 1.5, "min_exit_volatility_ratio": 0.8, "max_exit_volatility_ratio": 1.3, "market_close_hour": 16, "market_close_minute": 0, "close_before_eod_minutes": 5, "timezone": "US/Eastern", "spread_history_bars": 1000}'



Options for objective
sharpe_ratio (default)
win_rate
total_return
profit_factor
sortino_ratio
volatility (minimizes volatility)
value_at_risk (minimizes VaR)  

Options for algorithm
bayesian
genetic
random_search


docker compose exec backend-api python -m src.research.potential_pairs_analyzer --help
usage: potential_pairs_analyzer.py [-h] [--timeframe TIMEFRAME]
                                   [--lookback-days LOOKBACK_DAYS]
                                   [--start-date START_DATE]
                                   [--end-date END_DATE] [--min-bars MIN_BARS]
                                   [--min-dollar-volume MIN_DOLLAR_VOLUME]
                                   [--max-symbols MAX_SYMBOLS]
                                   [--max-pairs MAX_PAIRS] [--entry-z ENTRY_Z]
                                   [--exit-z EXIT_Z] [--min-trades MIN_TRADES]
                                   [--parallelism PARALLELISM]
                                   [--replace-existing]
                                   [--status {candidate,validated,rejected}]
                                   [--verbose]

Identify candidate pairs for the pairs trading strategy.

options:
  -h, --help            show this help message and exit
  --timeframe TIMEFRAME
                        Timeframe to evaluate (must match candles.tf).
  --lookback-days LOOKBACK_DAYS
                        Trailing calendar days to analyze when --start-date is
                        omitted.
  --start-date START_DATE
                        Inclusive UTC start timestamp (e.g.
                        2024-01-01T13:30:00Z).
  --end-date END_DATE   Inclusive UTC end timestamp.
  --min-bars MIN_BARS   Minimum overlapping bars required for a pair.
  --min-dollar-volume MIN_DOLLAR_VOLUME
                        Minimum average dollar volume per bar for symbols.
  --max-symbols MAX_SYMBOLS
                        Maximum number of symbols to include after filtering
                        by liquidity.
  --max-pairs MAX_PAIRS
                        Optional hard cap on the number of pairs to analyze.
  --entry-z ENTRY_Z     Z-score entry threshold used for simulation.
  --exit-z EXIT_Z       Z-score exit threshold used for simulation.
  --min-trades MIN_TRADES
                        Minimum completed trades required to keep a pair.
  --parallelism PARALLELISM
                        Worker threads for pair evaluation.
  --replace-existing    Delete existing potential_pairs rows overlapping the
                        window/timeframe.
  --status {candidate,validated,rejected}
                        Status flag to assign to new rows.
  --verbose             Enable debug logging.



  Data Collector (historical batch)

  docker compose exec backend-api ./src/research/manage_collection.sh resume-job JOB_ID

  docker compose exec backend-api python3 src/research/historical_data_collector.py create-job \
  --name "samplel_1_20251010_20251020" \
  --symbols-file src/research/sample_symbols.txt \
  --start-date "2025-10-10T00:00:00Z" \
  --end-date "2025-10-20T00:00:00Z" \
  --bar-size "5 secs"