"""Initial schema

Revision ID: 97aab0116466
Revises: 
Create Date: 2025-09-25 04:08:00.611194

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '97aab0116466'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('account_id', sa.String(length=20), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('backtest_runs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('strategy_name', sa.String(length=100), nullable=False),
    sa.Column('params_json', sa.JSON(), nullable=True),
    sa.Column('start_ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('pnl', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('sharpe', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('maxdd', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('trades', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('start_ts < end_ts', name='ck_backtest_runs_date_order'),
    sa.CheckConstraint('trades >= 0', name='ck_backtest_runs_trades_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_backtest_runs_strategy_created', 'backtest_runs', ['strategy_name', 'created_at'], unique=False)
    op.create_table('health',
    sa.Column('service', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint("status IN ('healthy', 'unhealthy', 'starting', 'stopping')", name='ck_health_status'),
    sa.PrimaryKeyConstraint('service')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service', sa.String(length=50), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False),
    sa.Column('msg', sa.Text(), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('meta_json', sa.JSON(), nullable=True),
    sa.CheckConstraint("level IN ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL')", name='ck_logs_level'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_logs_level_ts', 'logs', ['level', 'ts'], unique=False)
    op.create_index('ix_logs_service_ts', 'logs', ['service', 'ts'], unique=False)
    op.create_table('risk_limits',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value_json', sa.JSON(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index('ix_risk_limits_key', 'risk_limits', ['key'], unique=False)
    op.create_table('strategies',
    sa.Column('strategy_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('params_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('strategy_id')
    )
    op.create_table('symbols',
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('conid', sa.Integer(), nullable=True),
    sa.Column('primary_exchange', sa.String(length=20), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('symbol'),
    sa.UniqueConstraint('conid')
    )
    op.create_table('account_summary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.String(length=20), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.account_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_account_summary_account_tag_ts', 'account_summary', ['account_id', 'tag', 'ts'], unique=False)
    op.create_table('backtest_trades',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('side', sa.String(length=4), nullable=False),
    sa.Column('qty', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('entry_ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('entry_px', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('exit_ts', sa.DateTime(timezone=True), nullable=True),
    sa.Column('exit_px', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('pnl', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.CheckConstraint("side IN ('BUY', 'SELL')", name='ck_backtest_trades_side'),
    sa.CheckConstraint('entry_px > 0', name='ck_backtest_trades_entry_px_positive'),
    sa.CheckConstraint('exit_px IS NULL OR exit_px > 0', name='ck_backtest_trades_exit_px_positive'),
    sa.CheckConstraint('exit_ts IS NULL OR entry_ts <= exit_ts', name='ck_backtest_trades_date_order'),
    sa.CheckConstraint('qty > 0', name='ck_backtest_trades_qty_positive'),
    sa.ForeignKeyConstraint(['run_id'], ['backtest_runs.id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_backtest_trades_run_symbol', 'backtest_trades', ['run_id', 'symbol'], unique=False)
    op.create_table('candles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('tf', sa.String(length=20), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('open', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('high', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('low', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('close', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol', 'tf', 'ts', name='uq_candles_symbol_tf_ts')
    )
    op.create_index('ix_candles_symbol_tf_ts', 'candles', ['symbol', 'tf', 'ts'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.String(length=20), nullable=False),
    sa.Column('strategy_id', sa.String(length=50), nullable=True),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('side', sa.String(length=4), nullable=False),
    sa.Column('qty', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('order_type', sa.String(length=10), nullable=False),
    sa.Column('limit_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('stop_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('tif', sa.String(length=10), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('external_order_id', sa.String(length=50), nullable=True),
    sa.Column('placed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint("order_type IN ('MKT', 'LMT', 'STP', 'STP-LMT')", name='ck_orders_type'),
    sa.CheckConstraint("side IN ('BUY', 'SELL')", name='ck_orders_side'),
    sa.CheckConstraint("tif IN ('DAY', 'GTC', 'IOC', 'FOK')", name='ck_orders_tif'),
    sa.CheckConstraint('qty > 0', name='ck_orders_qty_positive'),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.account_id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.strategy_id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_orders_external_id', 'orders', ['external_order_id'], unique=False)
    op.create_index('ix_orders_strategy_symbol', 'orders', ['strategy_id', 'symbol'], unique=False)
    op.create_index('ix_orders_updated_at', 'orders', ['updated_at'], unique=False)
    op.create_table('positions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.String(length=20), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('conid', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('avg_price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.account_id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_positions_account_symbol', 'positions', ['account_id', 'symbol'], unique=False)
    op.create_index('ix_positions_symbol', 'positions', ['symbol'], unique=False)
    op.create_table('signals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('strategy_id', sa.String(length=50), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('signal_type', sa.String(length=20), nullable=False),
    sa.Column('strength', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('meta_json', sa.JSON(), nullable=True),
    sa.CheckConstraint('strength IS NULL OR (strength >= 0.0 AND strength <= 1.0)', name='ck_signals_strength_range'),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.strategy_id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_signals_strategy_ts', 'signals', ['strategy_id', 'ts'], unique=False)
    op.create_index('ix_signals_symbol_ts', 'signals', ['symbol', 'ts'], unique=False)
    op.create_table('ticks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('bid', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('ask', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('last', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('bid_size', sa.Integer(), nullable=True),
    sa.Column('ask_size', sa.Integer(), nullable=True),
    sa.Column('last_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_ticks_symbol_ts', 'ticks', ['symbol', 'ts'], unique=False)
    op.create_table('watchlist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol', name='uq_watchlist_symbol')
    )
    op.create_index('ix_watchlist_symbol', 'watchlist', ['symbol'], unique=False)
    op.create_table('executions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('trade_id', sa.String(length=50), nullable=True),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('qty', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('price > 0', name='ck_executions_price_positive'),
    sa.CheckConstraint('qty > 0', name='ck_executions_qty_positive'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['symbol'], ['symbols.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_executions_order_id_ts', 'executions', ['order_id', 'ts'], unique=False)
    op.create_index('ix_executions_symbol_ts', 'executions', ['symbol', 'ts'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_executions_symbol_ts', table_name='executions')
    op.drop_index('ix_executions_order_id_ts', table_name='executions')
    op.drop_table('executions')
    op.drop_index('ix_watchlist_symbol', table_name='watchlist')
    op.drop_table('watchlist')
    op.drop_index('ix_ticks_symbol_ts', table_name='ticks')
    op.drop_table('ticks')
    op.drop_index('ix_signals_symbol_ts', table_name='signals')
    op.drop_index('ix_signals_strategy_ts', table_name='signals')
    op.drop_table('signals')
    op.drop_index('ix_positions_symbol', table_name='positions')
    op.drop_index('ix_positions_account_symbol', table_name='positions')
    op.drop_table('positions')
    op.drop_index('ix_orders_updated_at', table_name='orders')
    op.drop_index('ix_orders_strategy_symbol', table_name='orders')
    op.drop_index('ix_orders_external_id', table_name='orders')
    op.drop_table('orders')
    op.drop_index('ix_candles_symbol_tf_ts', table_name='candles')
    op.drop_table('candles')
    op.drop_index('ix_backtest_trades_run_symbol', table_name='backtest_trades')
    op.drop_table('backtest_trades')
    op.drop_index('ix_account_summary_account_tag_ts', table_name='account_summary')
    op.drop_table('account_summary')
    op.drop_table('symbols')
    op.drop_table('strategies')
    op.drop_index('ix_risk_limits_key', table_name='risk_limits')
    op.drop_table('risk_limits')
    op.drop_index('ix_logs_service_ts', table_name='logs')
    op.drop_index('ix_logs_level_ts', table_name='logs')
    op.drop_table('logs')
    op.drop_table('health')
    op.drop_index('ix_backtest_runs_strategy_created', table_name='backtest_runs')
    op.drop_table('backtest_runs')
    op.drop_table('accounts')
    # ### end Alembic commands ###
